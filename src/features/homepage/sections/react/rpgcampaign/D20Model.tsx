/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF, useTexture } from "@react-three/drei";
import { LayerMaterial, Texture } from "lamina";
import * as THREE from "three";
import { GLTF } from "three-stdlib";
import D20Glb from "./d20.glb?url";
import D20Texture from "./d20Numbers.png?url";

type GLTFResult = GLTF & {
  nodes: {
    D20: THREE.Mesh;
  };
  materials: Record<string, never>;
};

export function D20Model(props: JSX.IntrinsicElements["group"]) {
  const texture = useTexture(D20Texture);
  const { nodes } = useGLTF(D20Glb) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.D20.geometry} rotation={[0, -Math.PI / 2, 0]}>
        <LayerMaterial color="#00cc00" lighting="physical">
          {/* <Noise mode="multiply" scale={100} /> */}
          <Texture map={texture} alpha={1} />
        </LayerMaterial>
      </mesh>
    </group>
  );
}

useGLTF.preload(D20Glb);
