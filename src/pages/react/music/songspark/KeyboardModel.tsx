/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from "@react-three/drei";
import { Suspense } from "react";
import * as THREE from "three";
import { CustomBlending, FrontSide, ZeroFactor } from "three";
import { GLTF } from "three-stdlib";
import Keyboard from "./keyboard.gltf?url";

type GLTFResult = GLTF & {
  nodes: {
    Base: THREE.Mesh;
    WhiteKeys: THREE.Mesh;
    BlackKeys: THREE.Mesh;
  };
  materials: {
    Base: THREE.MeshStandardMaterial;
    WhiteKey: THREE.MeshStandardMaterial;
    BlackKey: THREE.MeshStandardMaterial;
  };
};

const opacity = 0.85;

export function KeyboardModel(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(Keyboard) as GLTFResult;
  return (
    <Suspense fallback={null}>
      <group {...props} dispose={null}>
        <mesh
          geometry={nodes.Base.geometry}
          material={materials.Base}
          material-opacity={opacity}
          material-transparent
          // material-depthWrite={true}
          material-side={FrontSide}
          material-blending={CustomBlending}
          material-blendDst={ZeroFactor}
        />
        <mesh
          geometry={nodes.WhiteKeys.geometry}
          material={materials.WhiteKey}
          material-opacity={opacity}
          material-transparent
          material-side={FrontSide}
          material-blending={CustomBlending}
          material-blendDst={ZeroFactor}
        />
        <mesh
          geometry={nodes.BlackKeys.geometry}
          material={materials.BlackKey}
          material-opacity={opacity}
          material-transparent
          material-side={FrontSide}
          material-blending={CustomBlending}
          material-blendDst={ZeroFactor}
        />
      </group>
    </Suspense>
  );
}

useGLTF.preload(Keyboard);
