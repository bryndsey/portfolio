/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from "@react-three/drei";
import * as THREE from "three";
import { DoubleSide } from "three";
import { GLTF } from "three-stdlib";
import Phone from "./phone.glb?url";

type GLTFResult = GLTF & {
  nodes: {
    PhoneBody: THREE.Mesh;
    ScreenBack: THREE.Mesh;
  };
  materials: {
    PhoneBody: THREE.MeshStandardMaterial;
    Black: THREE.MeshStandardMaterial;
  };
};

export function PhoneModel(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(Phone) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.PhoneBody.geometry}
        material={materials.PhoneBody}
      />
      {/* <mesh geometry={nodes.ScreenBack.geometry} material={materials.Black} /> */}
      <mesh geometry={nodes.ScreenBack.geometry}>
        <meshBasicMaterial color="black" />
      </mesh>
    </group>
  );
}

useGLTF.preload(Phone);
